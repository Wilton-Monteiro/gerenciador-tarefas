version: '3.8'

services:
  app:
    image: willmonteiro/gerenciador-tarefas:01
    container_name: gerenciador-tarefas-app
    ports:
      - "8248:3000"
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=tarefas_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  db:
    image: postgres:15-alpine
    container_name: gerenciador-tarefas-db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=tarefas_db \ 
      - DB_USER=postgres
      - DB_PASSWORD=postgres123 \
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Se tiver script inicial, pode mapear aqui
      #- ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tarefas_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
    name: gerenciador-tarefas-network
